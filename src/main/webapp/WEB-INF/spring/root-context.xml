<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	
 	<!-- base-package 설정위치 포함 하위 패키지 모두 검색 처리
 		구분자 사용 나열 (빈칸, 콤마, 세미콜론 등으로)-->
	<context:component-scan base-package="com.spring.learn" />
	<context:component-scan base-package="com.spring.learn.user"/>
	<context:component-scan base-package="com.spring.learn.memberboard"/>
	<context:component-scan base-package="com.spring.learn.board"/>
	
	
	<!-- Spring JDBC 관련 설정 -->
	<!-- DataSource 설정 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
	    destroy-method="close">
	    <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>	
		<property name="url" value="jdbc:oracle:thin:@192.168.18.10:1521:xe"/>
<!-- 		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/> -->
	    <property name="username" value="learn"/>
	    <property name="password" value="pw"/>
	</bean>
	
	<!-- 스프링 - 마이바티스 연동 설정 -->
	<!-- DataSource bean 사용 -->
	<bean id="sqlSessionFactory"
	    class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="configLocation" value="classpath:mybatis-config.xml"></property>
	    <property name="dataSource" ref="dataSource" />
	    <property name="mapperLocations" value="classpath:mappings/**/*Mapper.xml"></property>
	</bean>
	

	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- Mapper 인터페이스 사용 방식 -->
	<mybatis-spring:scan base-package="com.spring.learn.**.impl"/>

	<!-- <context:property-placeholder location="classpath:/db-config/email.properties" /> -->
		<!-- 이메일 인증 관련 빈 등록 -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.gmail.com" />
      <property name="port" value="587" />
      <property name="username" value="dldldlwjdans@gmail.com" />
      <property name="password" value="zfnalgrzpacwbltq" />
      <property name="javaMailProperties">
         <props>
			    <!-- <prop key="mail.smtp.ssl.enable">true</prop> -->
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
            </props>
      </property>
      
   </bean>

</beans>
